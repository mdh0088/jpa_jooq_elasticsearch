/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.routines;


import jooq.jooq_dsl.JDmcReport;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JMask extends AbstractRoutine<String> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>dmc_report.mask.RETURN_VALUE</code>.
     */
    public static final Parameter<String> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.CHAR(32), false, false);

    /**
     * The parameter <code>dmc_report.mask.unformatted_value</code>.
     */
    public static final Parameter<Long> UNFORMATTED_VALUE = Internal.createParameter("unformatted_value", SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>dmc_report.mask.format_string</code>.
     */
    public static final Parameter<String> FORMAT_STRING = Internal.createParameter("format_string", SQLDataType.CHAR(32), false, false);

    /**
     * Create a new routine call instance
     */
    public JMask() {
        super("mask", JDmcReport.DMC_REPORT, SQLDataType.CHAR(32));

        setReturnParameter(RETURN_VALUE);
        addInParameter(UNFORMATTED_VALUE);
        addInParameter(FORMAT_STRING);
    }

    /**
     * Set the <code>unformatted_value</code> parameter IN value to the routine
     */
    public void setUnformattedValue(Long value) {
        setValue(UNFORMATTED_VALUE, value);
    }

    /**
     * Set the <code>unformatted_value</code> parameter to the function to be
     * used with a {@link org.jooq.Select} statement
     */
    public JMask setUnformattedValue(Field<Long> field) {
        setField(UNFORMATTED_VALUE, field);
        return this;
    }

    /**
     * Set the <code>format_string</code> parameter IN value to the routine
     */
    public void setFormatString(String value) {
        setValue(FORMAT_STRING, value);
    }

    /**
     * Set the <code>format_string</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public JMask setFormatString(Field<String> field) {
        setField(FORMAT_STRING, field);
        return this;
    }
}
