/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrOrderOptRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrOrderOpt extends TableImpl<JTDrOrderOptRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_ORDER_OPT</code>
     */
    public static final JTDrOrderOpt T_DR_ORDER_OPT = new JTDrOrderOpt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrOrderOptRecord> getRecordType() {
        return JTDrOrderOptRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.IDX</code>.
     */
    public final TableField<JTDrOrderOptRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.ORDER_CODE</code>. 주문코드
     */
    public final TableField<JTDrOrderOptRecord, String> ORDER_CODE = createField(DSL.name("ORDER_CODE"), SQLDataType.VARCHAR(45), this, "주문코드");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.OP_CODE</code>. 상품 및 보고서 코드
     */
    public final TableField<JTDrOrderOptRecord, String> OP_CODE = createField(DSL.name("OP_CODE"), SQLDataType.VARCHAR(45), this, "상품 및 보고서 코드");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.OPT_CODE</code>. 옵션코드
     */
    public final TableField<JTDrOrderOptRecord, String> OPT_CODE = createField(DSL.name("OPT_CODE"), SQLDataType.VARCHAR(32), this, "옵션코드");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.OPT_FILE_TYPE</code>. 파일형식
     */
    public final TableField<JTDrOrderOptRecord, String> OPT_FILE_TYPE = createField(DSL.name("OPT_FILE_TYPE"), SQLDataType.VARCHAR(16), this, "파일형식");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.OPT_PRICE</code>. 금액
     */
    public final TableField<JTDrOrderOptRecord, Integer> OPT_PRICE = createField(DSL.name("OPT_PRICE"), SQLDataType.INTEGER, this, "금액");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.OPT_TYPE</code>. 옵션타입
     */
    public final TableField<JTDrOrderOptRecord, String> OPT_TYPE = createField(DSL.name("OPT_TYPE"), SQLDataType.VARCHAR(16), this, "옵션타입");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.ORDER_OPT_CNT</code>. 주문옵션 갯수
     */
    public final TableField<JTDrOrderOptRecord, Integer> ORDER_OPT_CNT = createField(DSL.name("ORDER_OPT_CNT"), SQLDataType.INTEGER, this, "주문옵션 갯수");

    /**
     * The column <code>dmc_report.T_DR_ORDER_OPT.REG_DATE</code>. 등록일
     */
    public final TableField<JTDrOrderOptRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록일");

    private JTDrOrderOpt(Name alias, Table<JTDrOrderOptRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrOrderOpt(Name alias, Table<JTDrOrderOptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_ORDER_OPT</code> table reference
     */
    public JTDrOrderOpt(String alias) {
        this(DSL.name(alias), T_DR_ORDER_OPT);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_ORDER_OPT</code> table reference
     */
    public JTDrOrderOpt(Name alias) {
        this(alias, T_DR_ORDER_OPT);
    }

    /**
     * Create a <code>dmc_report.T_DR_ORDER_OPT</code> table reference
     */
    public JTDrOrderOpt() {
        this(DSL.name("T_DR_ORDER_OPT"), null);
    }

    public <O extends Record> JTDrOrderOpt(Table<O> child, ForeignKey<O, JTDrOrderOptRecord> key) {
        super(child, key, T_DR_ORDER_OPT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public Identity<JTDrOrderOptRecord, Integer> getIdentity() {
        return (Identity<JTDrOrderOptRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrOrderOptRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_ORDER_OPT_PRIMARY;
    }

    @Override
    public JTDrOrderOpt as(String alias) {
        return new JTDrOrderOpt(DSL.name(alias), this);
    }

    @Override
    public JTDrOrderOpt as(Name alias) {
        return new JTDrOrderOpt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrOrderOpt rename(String name) {
        return new JTDrOrderOpt(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrOrderOpt rename(Name name) {
        return new JTDrOrderOpt(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, Integer, String, Integer, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
