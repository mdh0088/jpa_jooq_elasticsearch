/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.tables.records.JTDrUserCogPathRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrUserCogPath extends TableImpl<JTDrUserCogPathRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_USER_COG_PATH</code>
     */
    public static final JTDrUserCogPath T_DR_USER_COG_PATH = new JTDrUserCogPath();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrUserCogPathRecord> getRecordType() {
        return JTDrUserCogPathRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_USER_COG_PATH.USER_ID</code>.
     */
    public final TableField<JTDrUserCogPathRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_COG_PATH.COG_PATH_CODE</code>.
     */
    public final TableField<JTDrUserCogPathRecord, String> COG_PATH_CODE = createField(DSL.name("COG_PATH_CODE"), SQLDataType.VARCHAR(45), this, "");

    private JTDrUserCogPath(Name alias, Table<JTDrUserCogPathRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrUserCogPath(Name alias, Table<JTDrUserCogPathRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_COG_PATH</code> table
     * reference
     */
    public JTDrUserCogPath(String alias) {
        this(DSL.name(alias), T_DR_USER_COG_PATH);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_COG_PATH</code> table
     * reference
     */
    public JTDrUserCogPath(Name alias) {
        this(alias, T_DR_USER_COG_PATH);
    }

    /**
     * Create a <code>dmc_report.T_DR_USER_COG_PATH</code> table reference
     */
    public JTDrUserCogPath() {
        this(DSL.name("T_DR_USER_COG_PATH"), null);
    }

    public <O extends Record> JTDrUserCogPath(Table<O> child, ForeignKey<O, JTDrUserCogPathRecord> key) {
        super(child, key, T_DR_USER_COG_PATH);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public JTDrUserCogPath as(String alias) {
        return new JTDrUserCogPath(DSL.name(alias), this);
    }

    @Override
    public JTDrUserCogPath as(Name alias) {
        return new JTDrUserCogPath(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserCogPath rename(String name) {
        return new JTDrUserCogPath(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserCogPath rename(Name name) {
        return new JTDrUserCogPath(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
