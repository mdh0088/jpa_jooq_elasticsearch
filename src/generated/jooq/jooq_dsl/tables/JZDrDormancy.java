/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import jooq.jooq_dsl.Indexes;
import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JZDrDormancyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 휴면 계정 log
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JZDrDormancy extends TableImpl<JZDrDormancyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.Z_DR_DORMANCY</code>
     */
    public static final JZDrDormancy Z_DR_DORMANCY = new JZDrDormancy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JZDrDormancyRecord> getRecordType() {
        return JZDrDormancyRecord.class;
    }

    /**
     * The column <code>dmc_report.Z_DR_DORMANCY.IDX</code>.
     */
    public final TableField<JZDrDormancyRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.Z_DR_DORMANCY.USER_ID</code>.
     */
    public final TableField<JZDrDormancyRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("0", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>dmc_report.Z_DR_DORMANCY.DORMANCY_DATE</code>. 휴면 계정 처리일
     */
    public final TableField<JZDrDormancyRecord, LocalDateTime> DORMANCY_DATE = createField(DSL.name("DORMANCY_DATE"), SQLDataType.LOCALDATETIME(0), this, "휴면 계정 처리일");

    private JZDrDormancy(Name alias, Table<JZDrDormancyRecord> aliased) {
        this(alias, aliased, null);
    }

    private JZDrDormancy(Name alias, Table<JZDrDormancyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("휴면 계정 log"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_DORMANCY</code> table reference
     */
    public JZDrDormancy(String alias) {
        this(DSL.name(alias), Z_DR_DORMANCY);
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_DORMANCY</code> table reference
     */
    public JZDrDormancy(Name alias) {
        this(alias, Z_DR_DORMANCY);
    }

    /**
     * Create a <code>dmc_report.Z_DR_DORMANCY</code> table reference
     */
    public JZDrDormancy() {
        this(DSL.name("Z_DR_DORMANCY"), null);
    }

    public <O extends Record> JZDrDormancy(Table<O> child, ForeignKey<O, JZDrDormancyRecord> key) {
        super(child, key, Z_DR_DORMANCY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.Z_DR_DORMANCY_IX_DORMANCY_DATE);
    }

    @Override
    public Identity<JZDrDormancyRecord, Integer> getIdentity() {
        return (Identity<JZDrDormancyRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JZDrDormancyRecord> getPrimaryKey() {
        return Keys.KEY_Z_DR_DORMANCY_PRIMARY;
    }

    @Override
    public JZDrDormancy as(String alias) {
        return new JZDrDormancy(DSL.name(alias), this);
    }

    @Override
    public JZDrDormancy as(Name alias) {
        return new JZDrDormancy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrDormancy rename(String name) {
        return new JZDrDormancy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrDormancy rename(Name name) {
        return new JZDrDormancy(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
