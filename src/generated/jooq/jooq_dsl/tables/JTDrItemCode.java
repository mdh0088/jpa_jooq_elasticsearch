/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import jooq.jooq_dsl.Indexes;
import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrItemCodeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 아이템 유닛 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrItemCode extends TableImpl<JTDrItemCodeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_ITEM_CODE</code>
     */
    public static final JTDrItemCode T_DR_ITEM_CODE = new JTDrItemCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrItemCodeRecord> getRecordType() {
        return JTDrItemCodeRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_CODE</code>.
     */
    public final TableField<JTDrItemCodeRecord, String> ITEM_CODE = createField(DSL.name("ITEM_CODE"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_GROUP_CODE</code>. 아이템 그룹
     * 코드
     */
    public final TableField<JTDrItemCodeRecord, String> ITEM_GROUP_CODE = createField(DSL.name("ITEM_GROUP_CODE"), SQLDataType.VARCHAR(32).nullable(false), this, "아이템 그룹 코드");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_NAME</code>. 아이템 명
     */
    public final TableField<JTDrItemCodeRecord, String> ITEM_NAME = createField(DSL.name("ITEM_NAME"), SQLDataType.VARCHAR(32), this, "아이템 명");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_TYPE</code>. 코드 타입 (0: 공통
     * 1: 카테고리)
     */
    public final TableField<JTDrItemCodeRecord, Integer> ITEM_TYPE = createField(DSL.name("ITEM_TYPE"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "코드 타입 (0: 공통 1: 카테고리)");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_PARENT_CODE</code>. 등록자
     * ID
     */
    public final TableField<JTDrItemCodeRecord, String> ITEM_PARENT_CODE = createField(DSL.name("ITEM_PARENT_CODE"), SQLDataType.VARCHAR(32), this, "등록자 ID");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_DEPTH</code>. 뎁스
     */
    public final TableField<JTDrItemCodeRecord, Integer> ITEM_DEPTH = createField(DSL.name("ITEM_DEPTH"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "뎁스");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_SEQ</code>.
     */
    public final TableField<JTDrItemCodeRecord, Integer> ITEM_SEQ = createField(DSL.name("ITEM_SEQ"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.ITEM_ACTIVE</code>. 사용여부
     */
    public final TableField<JTDrItemCodeRecord, String> ITEM_ACTIVE = createField(DSL.name("ITEM_ACTIVE"), SQLDataType.VARCHAR(1).nullable(false).defaultValue(DSL.inline("0", SQLDataType.VARCHAR)), this, "사용여부");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.REG_ID</code>. 등록자 ID
     */
    public final TableField<JTDrItemCodeRecord, String> REG_ID = createField(DSL.name("REG_ID"), SQLDataType.VARCHAR(32), this, "등록자 ID");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.REG_DATE</code>. 등록 일자
     */
    public final TableField<JTDrItemCodeRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록 일자");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.EDIT_DATE</code>. 변경일자
     */
    public final TableField<JTDrItemCodeRecord, LocalDateTime> EDIT_DATE = createField(DSL.name("EDIT_DATE"), SQLDataType.LOCALDATETIME(0), this, "변경일자");

    /**
     * The column <code>dmc_report.T_DR_ITEM_CODE.EDIT_ID</code>. 변경자 ID
     */
    public final TableField<JTDrItemCodeRecord, String> EDIT_ID = createField(DSL.name("EDIT_ID"), SQLDataType.VARCHAR(32), this, "변경자 ID");

    private JTDrItemCode(Name alias, Table<JTDrItemCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrItemCode(Name alias, Table<JTDrItemCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("아이템 유닛 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_ITEM_CODE</code> table reference
     */
    public JTDrItemCode(String alias) {
        this(DSL.name(alias), T_DR_ITEM_CODE);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_ITEM_CODE</code> table reference
     */
    public JTDrItemCode(Name alias) {
        this(alias, T_DR_ITEM_CODE);
    }

    /**
     * Create a <code>dmc_report.T_DR_ITEM_CODE</code> table reference
     */
    public JTDrItemCode() {
        this(DSL.name("T_DR_ITEM_CODE"), null);
    }

    public <O extends Record> JTDrItemCode(Table<O> child, ForeignKey<O, JTDrItemCodeRecord> key) {
        super(child, key, T_DR_ITEM_CODE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.T_DR_ITEM_CODE_ITEM_CODE, Indexes.T_DR_ITEM_CODE_ITEM_GROUP_CODE);
    }

    @Override
    public UniqueKey<JTDrItemCodeRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_ITEM_CODE_PRIMARY;
    }

    @Override
    public JTDrItemCode as(String alias) {
        return new JTDrItemCode(DSL.name(alias), this);
    }

    @Override
    public JTDrItemCode as(Name alias) {
        return new JTDrItemCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrItemCode rename(String name) {
        return new JTDrItemCode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrItemCode rename(Name name) {
        return new JTDrItemCode(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, Integer, String, Integer, Integer, String, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
