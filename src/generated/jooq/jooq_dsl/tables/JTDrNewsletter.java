/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrNewsletterRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrNewsletter extends TableImpl<JTDrNewsletterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_NEWSLETTER</code>
     */
    public static final JTDrNewsletter T_DR_NEWSLETTER = new JTDrNewsletter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrNewsletterRecord> getRecordType() {
        return JTDrNewsletterRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.IDX</code>.
     */
    public final TableField<JTDrNewsletterRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.LETTER_CODE</code>. 뉴스레터 코드
     */
    public final TableField<JTDrNewsletterRecord, String> LETTER_CODE = createField(DSL.name("LETTER_CODE"), SQLDataType.VARCHAR(45), this, "뉴스레터 코드");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_RATING_POINT_CODE</code>.
     * 평가시 적립 포인트 코드
     */
    public final TableField<JTDrNewsletterRecord, String> NL_RATING_POINT_CODE = createField(DSL.name("NL_RATING_POINT_CODE"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("'500'", SQLDataType.VARCHAR)), this, "평가시 적립 포인트 코드");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_SUBJECT</code>. 제목
     */
    public final TableField<JTDrNewsletterRecord, String> NL_SUBJECT = createField(DSL.name("NL_SUBJECT"), SQLDataType.VARCHAR(1000), this, "제목");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_SUMMARY</code>. 내용
     */
    public final TableField<JTDrNewsletterRecord, String> NL_SUMMARY = createField(DSL.name("NL_SUMMARY"), SQLDataType.VARCHAR(3000), this, "내용");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_CONTENTS</code>. HTML내용
     */
    public final TableField<JTDrNewsletterRecord, String> NL_CONTENTS = createField(DSL.name("NL_CONTENTS"), SQLDataType.CLOB, this, "HTML내용");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_TAG</code>. 태그
     */
    public final TableField<JTDrNewsletterRecord, String> NL_TAG = createField(DSL.name("NL_TAG"), SQLDataType.VARCHAR(2000), this, "태그");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.NL_VIEW_CNT</code>.
     */
    public final TableField<JTDrNewsletterRecord, Integer> NL_VIEW_CNT = createField(DSL.name("NL_VIEW_CNT"), SQLDataType.INTEGER.defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.REGIST_ID</code>. 등록작
     */
    public final TableField<JTDrNewsletterRecord, String> REGIST_ID = createField(DSL.name("REGIST_ID"), SQLDataType.VARCHAR(45), this, "등록작");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.REGIST_DATE</code>. 등록일
     */
    public final TableField<JTDrNewsletterRecord, LocalDateTime> REGIST_DATE = createField(DSL.name("REGIST_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록일");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.UPDATE_ID</code>. 수정자
     */
    public final TableField<JTDrNewsletterRecord, String> UPDATE_ID = createField(DSL.name("UPDATE_ID"), SQLDataType.VARCHAR(45), this, "수정자");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER.UPDATE_DATE</code>. 수정일
     */
    public final TableField<JTDrNewsletterRecord, LocalDateTime> UPDATE_DATE = createField(DSL.name("UPDATE_DATE"), SQLDataType.LOCALDATETIME(0), this, "수정일");

    private JTDrNewsletter(Name alias, Table<JTDrNewsletterRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrNewsletter(Name alias, Table<JTDrNewsletterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_NEWSLETTER</code> table reference
     */
    public JTDrNewsletter(String alias) {
        this(DSL.name(alias), T_DR_NEWSLETTER);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_NEWSLETTER</code> table reference
     */
    public JTDrNewsletter(Name alias) {
        this(alias, T_DR_NEWSLETTER);
    }

    /**
     * Create a <code>dmc_report.T_DR_NEWSLETTER</code> table reference
     */
    public JTDrNewsletter() {
        this(DSL.name("T_DR_NEWSLETTER"), null);
    }

    public <O extends Record> JTDrNewsletter(Table<O> child, ForeignKey<O, JTDrNewsletterRecord> key) {
        super(child, key, T_DR_NEWSLETTER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public Identity<JTDrNewsletterRecord, Integer> getIdentity() {
        return (Identity<JTDrNewsletterRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrNewsletterRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_NEWSLETTER_PRIMARY;
    }

    @Override
    public JTDrNewsletter as(String alias) {
        return new JTDrNewsletter(DSL.name(alias), this);
    }

    @Override
    public JTDrNewsletter as(Name alias) {
        return new JTDrNewsletter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrNewsletter rename(String name) {
        return new JTDrNewsletter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrNewsletter rename(Name name) {
        return new JTDrNewsletter(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, String, String, String, String, Integer, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
