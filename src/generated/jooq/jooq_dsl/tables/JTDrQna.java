/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrQnaRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 상담 게시판
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrQna extends TableImpl<JTDrQnaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_QNA</code>
     */
    public static final JTDrQna T_DR_QNA = new JTDrQna();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrQnaRecord> getRecordType() {
        return JTDrQnaRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_QNA.ID</code>.
     */
    public final TableField<JTDrQnaRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_QNA.CONN_ID</code>. 연결된 게시물 ID (원본은 0)
     */
    public final TableField<JTDrQnaRecord, Integer> CONN_ID = createField(DSL.name("CONN_ID"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "연결된 게시물 ID (원본은 0)");

    /**
     * The column <code>dmc_report.T_DR_QNA.TITLE</code>.
     */
    public final TableField<JTDrQnaRecord, String> TITLE = createField(DSL.name("TITLE"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>dmc_report.T_DR_QNA.REG_USER</code>.
     */
    public final TableField<JTDrQnaRecord, String> REG_USER = createField(DSL.name("REG_USER"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>dmc_report.T_DR_QNA.REG_DATE</code>.
     */
    public final TableField<JTDrQnaRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>dmc_report.T_DR_QNA.REG_AUTH</code>. 등록자  권한 (A:관리자
     * U:유저)
     */
    public final TableField<JTDrQnaRecord, String> REG_AUTH = createField(DSL.name("REG_AUTH"), SQLDataType.VARCHAR(1).defaultValue(DSL.inline("U", SQLDataType.VARCHAR)), this, "등록자  권한 (A:관리자 U:유저)");

    /**
     * The column <code>dmc_report.T_DR_QNA.CHECK_YN</code>. 사용자 확인여부
     */
    public final TableField<JTDrQnaRecord, String> CHECK_YN = createField(DSL.name("CHECK_YN"), SQLDataType.CHAR(1).defaultValue(DSL.inline("N", SQLDataType.CHAR)), this, "사용자 확인여부");

    /**
     * The column <code>dmc_report.T_DR_QNA.TYPE_CODE</code>.
     */
    public final TableField<JTDrQnaRecord, String> TYPE_CODE = createField(DSL.name("TYPE_CODE"), SQLDataType.VARCHAR(16), this, "");

    /**
     * The column <code>dmc_report.T_DR_QNA.CONTENTS</code>. 내용
     */
    public final TableField<JTDrQnaRecord, String> CONTENTS = createField(DSL.name("CONTENTS"), SQLDataType.VARCHAR(3000), this, "내용");

    /**
     * The column <code>dmc_report.T_DR_QNA.FILE_ORIGINALNAME</code>. 파일원본이름
     */
    public final TableField<JTDrQnaRecord, String> FILE_ORIGINALNAME = createField(DSL.name("FILE_ORIGINALNAME"), SQLDataType.VARCHAR(100), this, "파일원본이름");

    /**
     * The column <code>dmc_report.T_DR_QNA.FILE_NAME</code>. 파일이름
     */
    public final TableField<JTDrQnaRecord, String> FILE_NAME = createField(DSL.name("FILE_NAME"), SQLDataType.VARCHAR(100), this, "파일이름");

    /**
     * The column <code>dmc_report.T_DR_QNA.FILE_PATH</code>. 파일경로
     */
    public final TableField<JTDrQnaRecord, String> FILE_PATH = createField(DSL.name("FILE_PATH"), SQLDataType.VARCHAR(255), this, "파일경로");

    /**
     * The column <code>dmc_report.T_DR_QNA.FILE_URL</code>. 파일주소
     */
    public final TableField<JTDrQnaRecord, String> FILE_URL = createField(DSL.name("FILE_URL"), SQLDataType.VARCHAR(255), this, "파일주소");

    /**
     * The column <code>dmc_report.T_DR_QNA.PANNEL_TEMP_KEY</code>.
     */
    public final TableField<JTDrQnaRecord, String> PANNEL_TEMP_KEY = createField(DSL.name("PANNEL_TEMP_KEY"), SQLDataType.VARCHAR(100), this, "");

    private JTDrQna(Name alias, Table<JTDrQnaRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrQna(Name alias, Table<JTDrQnaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상담 게시판"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_QNA</code> table reference
     */
    public JTDrQna(String alias) {
        this(DSL.name(alias), T_DR_QNA);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_QNA</code> table reference
     */
    public JTDrQna(Name alias) {
        this(alias, T_DR_QNA);
    }

    /**
     * Create a <code>dmc_report.T_DR_QNA</code> table reference
     */
    public JTDrQna() {
        this(DSL.name("T_DR_QNA"), null);
    }

    public <O extends Record> JTDrQna(Table<O> child, ForeignKey<O, JTDrQnaRecord> key) {
        super(child, key, T_DR_QNA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public Identity<JTDrQnaRecord, Integer> getIdentity() {
        return (Identity<JTDrQnaRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrQnaRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_QNA_PRIMARY;
    }

    @Override
    public JTDrQna as(String alias) {
        return new JTDrQna(DSL.name(alias), this);
    }

    @Override
    public JTDrQna as(Name alias) {
        return new JTDrQna(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrQna rename(String name) {
        return new JTDrQna(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrQna rename(Name name) {
        return new JTDrQna(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Integer, String, String, LocalDateTime, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
