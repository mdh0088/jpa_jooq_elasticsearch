/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import jooq.jooq_dsl.Indexes;
import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JZDrReportDlRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 보고서 열람 이력 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JZDrReportDl extends TableImpl<JZDrReportDlRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.Z_DR_REPORT_DL</code>
     */
    public static final JZDrReportDl Z_DR_REPORT_DL = new JZDrReportDl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JZDrReportDlRecord> getRecordType() {
        return JZDrReportDlRecord.class;
    }

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.ID</code>. ID
     */
    public final TableField<JZDrReportDlRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "ID");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.USER_ID</code>. 사용자 ID
     */
    public final TableField<JZDrReportDlRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100), this, "사용자 ID");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.USER_AUTH_CODE</code>. 계정 권한
     * 코드
     */
    public final TableField<JZDrReportDlRecord, String> USER_AUTH_CODE = createField(DSL.name("USER_AUTH_CODE"), SQLDataType.VARCHAR(32), this, "계정 권한 코드");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.R_CODE</code>. 리포트 코드
     */
    public final TableField<JZDrReportDlRecord, String> R_CODE = createField(DSL.name("R_CODE"), SQLDataType.VARCHAR(32), this, "리포트 코드");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.R_DOWNLOAD_TYPE</code>. 사용자권한
     * 보고서 다운로드 종류
     */
    public final TableField<JZDrReportDlRecord, String> R_DOWNLOAD_TYPE = createField(DSL.name("R_DOWNLOAD_TYPE"), SQLDataType.VARCHAR(32), this, "사용자권한 보고서 다운로드 종류");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.R_OPT_CODE</code>. 보고서 옵션코드
     */
    public final TableField<JZDrReportDlRecord, String> R_OPT_CODE = createField(DSL.name("R_OPT_CODE"), SQLDataType.VARCHAR(32), this, "보고서 옵션코드");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.R_TYPE</code>. 보고서 종류
     */
    public final TableField<JZDrReportDlRecord, String> R_TYPE = createField(DSL.name("R_TYPE"), SQLDataType.VARCHAR(10), this, "보고서 종류");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.CONNECTION_IP</code>. 접속IP
     */
    public final TableField<JZDrReportDlRecord, String> CONNECTION_IP = createField(DSL.name("CONNECTION_IP"), SQLDataType.VARCHAR(32), this, "접속IP");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.NETWORK_PATH</code>. 접속경로
     */
    public final TableField<JZDrReportDlRecord, String> NETWORK_PATH = createField(DSL.name("NETWORK_PATH"), SQLDataType.VARCHAR(32), this, "접속경로");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.KEYWORD_TYPE</code>. 키워드 종류
     */
    public final TableField<JZDrReportDlRecord, String> KEYWORD_TYPE = createField(DSL.name("KEYWORD_TYPE"), SQLDataType.VARCHAR(32), this, "키워드 종류");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.KEYWORD</code>. 키워드
     */
    public final TableField<JZDrReportDlRecord, String> KEYWORD = createField(DSL.name("KEYWORD"), SQLDataType.VARCHAR(45), this, "키워드");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.CATEGORY</code>. 카테고리 내역
     */
    public final TableField<JZDrReportDlRecord, String> CATEGORY = createField(DSL.name("CATEGORY"), SQLDataType.VARCHAR(200), this, "카테고리 내역");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.DEVICE_TYPE</code>. 디바이스 종류
     */
    public final TableField<JZDrReportDlRecord, String> DEVICE_TYPE = createField(DSL.name("DEVICE_TYPE"), SQLDataType.VARCHAR(32), this, "디바이스 종류");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.DEVICE</code>. 이용기기
     */
    public final TableField<JZDrReportDlRecord, String> DEVICE = createField(DSL.name("DEVICE"), SQLDataType.VARCHAR(100), this, "이용기기");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.BROWSER</code>. 접속 브라우저
     */
    public final TableField<JZDrReportDlRecord, String> BROWSER = createField(DSL.name("BROWSER"), SQLDataType.VARCHAR(100), this, "접속 브라우저");

    /**
     * The column <code>dmc_report.Z_DR_REPORT_DL.REG_DATE</code>. 등록일
     */
    public final TableField<JZDrReportDlRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록일");

    private JZDrReportDl(Name alias, Table<JZDrReportDlRecord> aliased) {
        this(alias, aliased, null);
    }

    private JZDrReportDl(Name alias, Table<JZDrReportDlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("보고서 열람 이력 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_REPORT_DL</code> table reference
     */
    public JZDrReportDl(String alias) {
        this(DSL.name(alias), Z_DR_REPORT_DL);
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_REPORT_DL</code> table reference
     */
    public JZDrReportDl(Name alias) {
        this(alias, Z_DR_REPORT_DL);
    }

    /**
     * Create a <code>dmc_report.Z_DR_REPORT_DL</code> table reference
     */
    public JZDrReportDl() {
        this(DSL.name("Z_DR_REPORT_DL"), null);
    }

    public <O extends Record> JZDrReportDl(Table<O> child, ForeignKey<O, JZDrReportDlRecord> key) {
        super(child, key, Z_DR_REPORT_DL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.Z_DR_REPORT_DL_R_CODE, Indexes.Z_DR_REPORT_DL_USER_ID);
    }

    @Override
    public Identity<JZDrReportDlRecord, Integer> getIdentity() {
        return (Identity<JZDrReportDlRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JZDrReportDlRecord> getPrimaryKey() {
        return Keys.KEY_Z_DR_REPORT_DL_PRIMARY;
    }

    @Override
    public JZDrReportDl as(String alias) {
        return new JZDrReportDl(DSL.name(alias), this);
    }

    @Override
    public JZDrReportDl as(Name alias) {
        return new JZDrReportDl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrReportDl rename(String name) {
        return new JZDrReportDl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrReportDl rename(Name name) {
        return new JZDrReportDl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, String, String, String, String, String, String, String, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
