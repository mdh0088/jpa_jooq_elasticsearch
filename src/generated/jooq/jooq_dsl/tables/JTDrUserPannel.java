/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrUserPannelRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 패널회원 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrUserPannel extends TableImpl<JTDrUserPannelRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_USER_PANNEL</code>
     */
    public static final JTDrUserPannel T_DR_USER_PANNEL = new JTDrUserPannel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrUserPannelRecord> getRecordType() {
        return JTDrUserPannelRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.USER_ID</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.INDUSTRY_KEY</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> INDUSTRY_KEY = createField(DSL.name("INDUSTRY_KEY"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.COMPANY_NAME</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> COMPANY_NAME = createField(DSL.name("COMPANY_NAME"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.POSITION</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> POSITION = createField(DSL.name("POSITION"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.PHONE</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> PHONE = createField(DSL.name("PHONE"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.MARRY_YN</code>. 미혼:1 기혼:2
     */
    public final TableField<JTDrUserPannelRecord, String> MARRY_YN = createField(DSL.name("MARRY_YN"), SQLDataType.CHAR(1).defaultValue(DSL.inline("N", SQLDataType.CHAR)), this, "미혼:1 기혼:2");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.AREA</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> AREA = createField(DSL.name("AREA"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("서울시", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.PANNEL_STATUS</code>. 미신청:0
     * 신청:1 승인:2 반려:3
     */
    public final TableField<JTDrUserPannelRecord, String> PANNEL_STATUS = createField(DSL.name("PANNEL_STATUS"), SQLDataType.CHAR(1).defaultValue(DSL.inline("1", SQLDataType.CHAR)), this, "미신청:0 신청:1 승인:2 반려:3");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.REG_DATE</code>.
     */
    public final TableField<JTDrUserPannelRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.CONFIRM_DATE</code>.
     */
    public final TableField<JTDrUserPannelRecord, LocalDate> CONFIRM_DATE = createField(DSL.name("CONFIRM_DATE"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_PANNEL.CONFIRM_MSG</code>.
     */
    public final TableField<JTDrUserPannelRecord, String> CONFIRM_MSG = createField(DSL.name("CONFIRM_MSG"), SQLDataType.VARCHAR(3000), this, "");

    private JTDrUserPannel(Name alias, Table<JTDrUserPannelRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrUserPannel(Name alias, Table<JTDrUserPannelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("패널회원 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_PANNEL</code> table
     * reference
     */
    public JTDrUserPannel(String alias) {
        this(DSL.name(alias), T_DR_USER_PANNEL);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_PANNEL</code> table
     * reference
     */
    public JTDrUserPannel(Name alias) {
        this(alias, T_DR_USER_PANNEL);
    }

    /**
     * Create a <code>dmc_report.T_DR_USER_PANNEL</code> table reference
     */
    public JTDrUserPannel() {
        this(DSL.name("T_DR_USER_PANNEL"), null);
    }

    public <O extends Record> JTDrUserPannel(Table<O> child, ForeignKey<O, JTDrUserPannelRecord> key) {
        super(child, key, T_DR_USER_PANNEL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public UniqueKey<JTDrUserPannelRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_USER_PANNEL_PRIMARY;
    }

    @Override
    public JTDrUserPannel as(String alias) {
        return new JTDrUserPannel(DSL.name(alias), this);
    }

    @Override
    public JTDrUserPannel as(Name alias) {
        return new JTDrUserPannel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserPannel rename(String name) {
        return new JTDrUserPannel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserPannel rename(Name name) {
        return new JTDrUserPannel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, String, String, String, String, String, LocalDateTime, LocalDate, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
