/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrUserAuthRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 계정 권한 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrUserAuth extends TableImpl<JTDrUserAuthRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_USER_AUTH</code>
     */
    public static final JTDrUserAuth T_DR_USER_AUTH = new JTDrUserAuth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrUserAuthRecord> getRecordType() {
        return JTDrUserAuthRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.IDX</code>.
     */
    public final TableField<JTDrUserAuthRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.USER_ID</code>. 사용자 ID
     */
    public final TableField<JTDrUserAuthRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100), this, "사용자 ID");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.ORDER_CODE</code>. 주문코드
     */
    public final TableField<JTDrUserAuthRecord, String> ORDER_CODE = createField(DSL.name("ORDER_CODE"), SQLDataType.VARCHAR(32), this, "주문코드");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.P_CODE</code>. 상품코드
     */
    public final TableField<JTDrUserAuthRecord, String> P_CODE = createField(DSL.name("P_CODE"), SQLDataType.VARCHAR(16), this, "상품코드");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.START_DATE</code>. 시작일
     */
    public final TableField<JTDrUserAuthRecord, LocalDateTime> START_DATE = createField(DSL.name("START_DATE"), SQLDataType.LOCALDATETIME(0), this, "시작일");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.END_DATE</code>. 종료일
     */
    public final TableField<JTDrUserAuthRecord, LocalDateTime> END_DATE = createField(DSL.name("END_DATE"), SQLDataType.LOCALDATETIME(0), this, "종료일");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.ACTIVE_YN</code>. 활성 여부
     */
    public final TableField<JTDrUserAuthRecord, String> ACTIVE_YN = createField(DSL.name("ACTIVE_YN"), SQLDataType.CHAR(1).defaultValue(DSL.inline("N", SQLDataType.CHAR)), this, "활성 여부");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.ACTIVE_PAY_STATE</code>. 활성화
     * 상태
     */
    public final TableField<JTDrUserAuthRecord, String> ACTIVE_PAY_STATE = createField(DSL.name("ACTIVE_PAY_STATE"), SQLDataType.VARCHAR(45).defaultValue(DSL.inline("NOW", SQLDataType.VARCHAR)), this, "활성화 상태");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.AUTH_MEMO</code>. 권한 메모
     */
    public final TableField<JTDrUserAuthRecord, String> AUTH_MEMO = createField(DSL.name("AUTH_MEMO"), SQLDataType.VARCHAR(200), this, "권한 메모");

    /**
     * The column <code>dmc_report.T_DR_USER_AUTH.REG_DATE</code>.
     */
    public final TableField<JTDrUserAuthRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    private JTDrUserAuth(Name alias, Table<JTDrUserAuthRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrUserAuth(Name alias, Table<JTDrUserAuthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("계정 권한 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_AUTH</code> table reference
     */
    public JTDrUserAuth(String alias) {
        this(DSL.name(alias), T_DR_USER_AUTH);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_USER_AUTH</code> table reference
     */
    public JTDrUserAuth(Name alias) {
        this(alias, T_DR_USER_AUTH);
    }

    /**
     * Create a <code>dmc_report.T_DR_USER_AUTH</code> table reference
     */
    public JTDrUserAuth() {
        this(DSL.name("T_DR_USER_AUTH"), null);
    }

    public <O extends Record> JTDrUserAuth(Table<O> child, ForeignKey<O, JTDrUserAuthRecord> key) {
        super(child, key, T_DR_USER_AUTH);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public Identity<JTDrUserAuthRecord, Integer> getIdentity() {
        return (Identity<JTDrUserAuthRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrUserAuthRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_USER_AUTH_PRIMARY;
    }

    @Override
    public JTDrUserAuth as(String alias) {
        return new JTDrUserAuth(DSL.name(alias), this);
    }

    @Override
    public JTDrUserAuth as(Name alias) {
        return new JTDrUserAuth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserAuth rename(String name) {
        return new JTDrUserAuth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrUserAuth rename(Name name) {
        return new JTDrUserAuth(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
