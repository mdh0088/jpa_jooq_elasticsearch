/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import jooq.jooq_dsl.Indexes;
import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JZDrIndexingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JZDrIndexing extends TableImpl<JZDrIndexingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.Z_DR_INDEXING</code>
     */
    public static final JZDrIndexing Z_DR_INDEXING = new JZDrIndexing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JZDrIndexingRecord> getRecordType() {
        return JZDrIndexingRecord.class;
    }

    /**
     * The column <code>dmc_report.Z_DR_INDEXING.IDX</code>.
     */
    public final TableField<JZDrIndexingRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.Z_DR_INDEXING.DR_CODE</code>. 보고서 코드
     */
    public final TableField<JZDrIndexingRecord, String> DR_CODE = createField(DSL.name("DR_CODE"), SQLDataType.VARCHAR(20).nullable(false), this, "보고서 코드");

    /**
     * The column <code>dmc_report.Z_DR_INDEXING.REGIST_DATE</code>. 등록일
     */
    public final TableField<JZDrIndexingRecord, LocalDateTime> REGIST_DATE = createField(DSL.name("REGIST_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록일");

    /**
     * The column <code>dmc_report.Z_DR_INDEXING.UPDATE_DATE</code>. 수정일
     */
    public final TableField<JZDrIndexingRecord, LocalDateTime> UPDATE_DATE = createField(DSL.name("UPDATE_DATE"), SQLDataType.LOCALDATETIME(0), this, "수정일");

    /**
     * The column <code>dmc_report.Z_DR_INDEXING.STATUS</code>.
     */
    public final TableField<JZDrIndexingRecord, String> STATUS = createField(DSL.name("STATUS"), SQLDataType.VARCHAR(1).defaultValue(DSL.inline("1", SQLDataType.VARCHAR)), this, "");

    private JZDrIndexing(Name alias, Table<JZDrIndexingRecord> aliased) {
        this(alias, aliased, null);
    }

    private JZDrIndexing(Name alias, Table<JZDrIndexingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_INDEXING</code> table reference
     */
    public JZDrIndexing(String alias) {
        this(DSL.name(alias), Z_DR_INDEXING);
    }

    /**
     * Create an aliased <code>dmc_report.Z_DR_INDEXING</code> table reference
     */
    public JZDrIndexing(Name alias) {
        this(alias, Z_DR_INDEXING);
    }

    /**
     * Create a <code>dmc_report.Z_DR_INDEXING</code> table reference
     */
    public JZDrIndexing() {
        this(DSL.name("Z_DR_INDEXING"), null);
    }

    public <O extends Record> JZDrIndexing(Table<O> child, ForeignKey<O, JZDrIndexingRecord> key) {
        super(child, key, Z_DR_INDEXING);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.Z_DR_INDEXING_DR_CODE);
    }

    @Override
    public Identity<JZDrIndexingRecord, Integer> getIdentity() {
        return (Identity<JZDrIndexingRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JZDrIndexingRecord> getPrimaryKey() {
        return Keys.KEY_Z_DR_INDEXING_PRIMARY;
    }

    @Override
    public JZDrIndexing as(String alias) {
        return new JZDrIndexing(DSL.name(alias), this);
    }

    @Override
    public JZDrIndexing as(Name alias) {
        return new JZDrIndexing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrIndexing rename(String name) {
        return new JZDrIndexing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JZDrIndexing rename(Name name) {
        return new JZDrIndexing(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
