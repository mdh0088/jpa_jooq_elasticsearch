/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JZDrAuthExpiryLog;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JZDrAuthExpiryLogRecord extends UpdatableRecordImpl<JZDrAuthExpiryLogRecord> implements Record9<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.IDX</code>.
     */
    public JZDrAuthExpiryLogRecord setIdx(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.IDX</code>.
     */
    public Integer getIdx() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.USER_ID</code>. 사용자 ID
     */
    public JZDrAuthExpiryLogRecord setUserId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.USER_ID</code>. 사용자 ID
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.ORDER_CODE</code>. 주문코드
     */
    public JZDrAuthExpiryLogRecord setOrderCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.ORDER_CODE</code>. 주문코드
     */
    public String getOrderCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.P_CODE</code>. 상품코드
     */
    public JZDrAuthExpiryLogRecord setPCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.P_CODE</code>. 상품코드
     */
    public String getPCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.START_DATE</code>. 시작일
     */
    public JZDrAuthExpiryLogRecord setStartDate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.START_DATE</code>. 시작일
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.END_DATE</code>. 종료일
     */
    public JZDrAuthExpiryLogRecord setEndDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.END_DATE</code>. 종료일
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_CODE</code>.
     * 만료적용유형
     */
    public JZDrAuthExpiryLogRecord setExpiryCode(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_CODE</code>.
     * 만료적용유형
     */
    public String getExpiryCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_MEMO</code>.
     * 만료적용내용
     */
    public JZDrAuthExpiryLogRecord setExpiryMemo(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_MEMO</code>.
     * 만료적용내용
     */
    public String getExpiryMemo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.REG_DATE</code>. 저장된시간
     */
    public JZDrAuthExpiryLogRecord setRegDate(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.Z_DR_AUTH_EXPIRY_LOG.REG_DATE</code>. 저장된시간
     */
    public LocalDateTime getRegDate() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.IDX;
    }

    @Override
    public Field<String> field2() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.ORDER_CODE;
    }

    @Override
    public Field<String> field4() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.P_CODE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.END_DATE;
    }

    @Override
    public Field<String> field7() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_CODE;
    }

    @Override
    public Field<String> field8() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.EXPIRY_MEMO;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG.REG_DATE;
    }

    @Override
    public Integer component1() {
        return getIdx();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getOrderCode();
    }

    @Override
    public String component4() {
        return getPCode();
    }

    @Override
    public LocalDateTime component5() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component6() {
        return getEndDate();
    }

    @Override
    public String component7() {
        return getExpiryCode();
    }

    @Override
    public String component8() {
        return getExpiryMemo();
    }

    @Override
    public LocalDateTime component9() {
        return getRegDate();
    }

    @Override
    public Integer value1() {
        return getIdx();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getOrderCode();
    }

    @Override
    public String value4() {
        return getPCode();
    }

    @Override
    public LocalDateTime value5() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value6() {
        return getEndDate();
    }

    @Override
    public String value7() {
        return getExpiryCode();
    }

    @Override
    public String value8() {
        return getExpiryMemo();
    }

    @Override
    public LocalDateTime value9() {
        return getRegDate();
    }

    @Override
    public JZDrAuthExpiryLogRecord value1(Integer value) {
        setIdx(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value3(String value) {
        setOrderCode(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value4(String value) {
        setPCode(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value5(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value6(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value7(String value) {
        setExpiryCode(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value8(String value) {
        setExpiryMemo(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord value9(LocalDateTime value) {
        setRegDate(value);
        return this;
    }

    @Override
    public JZDrAuthExpiryLogRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, String value7, String value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JZDrAuthExpiryLogRecord
     */
    public JZDrAuthExpiryLogRecord() {
        super(JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG);
    }

    /**
     * Create a detached, initialised JZDrAuthExpiryLogRecord
     */
    public JZDrAuthExpiryLogRecord(Integer idx, String userId, String orderCode, String pCode, LocalDateTime startDate, LocalDateTime endDate, String expiryCode, String expiryMemo, LocalDateTime regDate) {
        super(JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG);

        setIdx(idx);
        setUserId(userId);
        setOrderCode(orderCode);
        setPCode(pCode);
        setStartDate(startDate);
        setEndDate(endDate);
        setExpiryCode(expiryCode);
        setExpiryMemo(expiryMemo);
        setRegDate(regDate);
    }

    /**
     * Create a detached, initialised JZDrAuthExpiryLogRecord
     */
    public JZDrAuthExpiryLogRecord(jooq.jooq_dsl.tables.pojos.JZDrAuthExpiryLog value) {
        super(JZDrAuthExpiryLog.Z_DR_AUTH_EXPIRY_LOG);

        if (value != null) {
            setIdx(value.getIdx());
            setUserId(value.getUserId());
            setOrderCode(value.getOrderCode());
            setPCode(value.getPCode());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
            setExpiryCode(value.getExpiryCode());
            setExpiryMemo(value.getExpiryMemo());
            setRegDate(value.getRegDate());
        }
    }
}
