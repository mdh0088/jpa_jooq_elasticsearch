/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JTDrUserAuth;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 계정 권한 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrUserAuthRecord extends UpdatableRecordImpl<JTDrUserAuthRecord> implements Record10<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.IDX</code>.
     */
    public JTDrUserAuthRecord setIdx(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.IDX</code>.
     */
    public Integer getIdx() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.USER_ID</code>. 사용자 ID
     */
    public JTDrUserAuthRecord setUserId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.USER_ID</code>. 사용자 ID
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.ORDER_CODE</code>. 주문코드
     */
    public JTDrUserAuthRecord setOrderCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.ORDER_CODE</code>. 주문코드
     */
    public String getOrderCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.P_CODE</code>. 상품코드
     */
    public JTDrUserAuthRecord setPCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.P_CODE</code>. 상품코드
     */
    public String getPCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.START_DATE</code>. 시작일
     */
    public JTDrUserAuthRecord setStartDate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.START_DATE</code>. 시작일
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.END_DATE</code>. 종료일
     */
    public JTDrUserAuthRecord setEndDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.END_DATE</code>. 종료일
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.ACTIVE_YN</code>. 활성 여부
     */
    public JTDrUserAuthRecord setActiveYn(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.ACTIVE_YN</code>. 활성 여부
     */
    public String getActiveYn() {
        return (String) get(6);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.ACTIVE_PAY_STATE</code>. 활성화
     * 상태
     */
    public JTDrUserAuthRecord setActivePayState(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.ACTIVE_PAY_STATE</code>. 활성화
     * 상태
     */
    public String getActivePayState() {
        return (String) get(7);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.AUTH_MEMO</code>. 권한 메모
     */
    public JTDrUserAuthRecord setAuthMemo(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.AUTH_MEMO</code>. 권한 메모
     */
    public String getAuthMemo() {
        return (String) get(8);
    }

    /**
     * Setter for <code>dmc_report.T_DR_USER_AUTH.REG_DATE</code>.
     */
    public JTDrUserAuthRecord setRegDate(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>dmc_report.T_DR_USER_AUTH.REG_DATE</code>.
     */
    public LocalDateTime getRegDate() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, String, LocalDateTime, LocalDateTime, String, String, String, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JTDrUserAuth.T_DR_USER_AUTH.IDX;
    }

    @Override
    public Field<String> field2() {
        return JTDrUserAuth.T_DR_USER_AUTH.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return JTDrUserAuth.T_DR_USER_AUTH.ORDER_CODE;
    }

    @Override
    public Field<String> field4() {
        return JTDrUserAuth.T_DR_USER_AUTH.P_CODE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return JTDrUserAuth.T_DR_USER_AUTH.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JTDrUserAuth.T_DR_USER_AUTH.END_DATE;
    }

    @Override
    public Field<String> field7() {
        return JTDrUserAuth.T_DR_USER_AUTH.ACTIVE_YN;
    }

    @Override
    public Field<String> field8() {
        return JTDrUserAuth.T_DR_USER_AUTH.ACTIVE_PAY_STATE;
    }

    @Override
    public Field<String> field9() {
        return JTDrUserAuth.T_DR_USER_AUTH.AUTH_MEMO;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return JTDrUserAuth.T_DR_USER_AUTH.REG_DATE;
    }

    @Override
    public Integer component1() {
        return getIdx();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getOrderCode();
    }

    @Override
    public String component4() {
        return getPCode();
    }

    @Override
    public LocalDateTime component5() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component6() {
        return getEndDate();
    }

    @Override
    public String component7() {
        return getActiveYn();
    }

    @Override
    public String component8() {
        return getActivePayState();
    }

    @Override
    public String component9() {
        return getAuthMemo();
    }

    @Override
    public LocalDateTime component10() {
        return getRegDate();
    }

    @Override
    public Integer value1() {
        return getIdx();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getOrderCode();
    }

    @Override
    public String value4() {
        return getPCode();
    }

    @Override
    public LocalDateTime value5() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value6() {
        return getEndDate();
    }

    @Override
    public String value7() {
        return getActiveYn();
    }

    @Override
    public String value8() {
        return getActivePayState();
    }

    @Override
    public String value9() {
        return getAuthMemo();
    }

    @Override
    public LocalDateTime value10() {
        return getRegDate();
    }

    @Override
    public JTDrUserAuthRecord value1(Integer value) {
        setIdx(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value3(String value) {
        setOrderCode(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value4(String value) {
        setPCode(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value5(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value6(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value7(String value) {
        setActiveYn(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value8(String value) {
        setActivePayState(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value9(String value) {
        setAuthMemo(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord value10(LocalDateTime value) {
        setRegDate(value);
        return this;
    }

    @Override
    public JTDrUserAuthRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, String value7, String value8, String value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JTDrUserAuthRecord
     */
    public JTDrUserAuthRecord() {
        super(JTDrUserAuth.T_DR_USER_AUTH);
    }

    /**
     * Create a detached, initialised JTDrUserAuthRecord
     */
    public JTDrUserAuthRecord(Integer idx, String userId, String orderCode, String pCode, LocalDateTime startDate, LocalDateTime endDate, String activeYn, String activePayState, String authMemo, LocalDateTime regDate) {
        super(JTDrUserAuth.T_DR_USER_AUTH);

        setIdx(idx);
        setUserId(userId);
        setOrderCode(orderCode);
        setPCode(pCode);
        setStartDate(startDate);
        setEndDate(endDate);
        setActiveYn(activeYn);
        setActivePayState(activePayState);
        setAuthMemo(authMemo);
        setRegDate(regDate);
    }

    /**
     * Create a detached, initialised JTDrUserAuthRecord
     */
    public JTDrUserAuthRecord(jooq.jooq_dsl.tables.pojos.JTDrUserAuth value) {
        super(JTDrUserAuth.T_DR_USER_AUTH);

        if (value != null) {
            setIdx(value.getIdx());
            setUserId(value.getUserId());
            setOrderCode(value.getOrderCode());
            setPCode(value.getPCode());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
            setActiveYn(value.getActiveYn());
            setActivePayState(value.getActivePayState());
            setAuthMemo(value.getAuthMemo());
            setRegDate(value.getRegDate());
        }
    }
}
