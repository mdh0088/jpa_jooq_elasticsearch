/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;

import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrNewsletterRatingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrNewsletterRating extends TableImpl<JTDrNewsletterRatingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_NEWSLETTER_RATING</code>
     */
    public static final JTDrNewsletterRating T_DR_NEWSLETTER_RATING = new JTDrNewsletterRating();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrNewsletterRatingRecord> getRecordType() {
        return JTDrNewsletterRatingRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER_RATING.IDX</code>.
     */
    public final TableField<JTDrNewsletterRatingRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER_RATING.LETTER_CODE</code>.
     */
    public final TableField<JTDrNewsletterRatingRecord, String> LETTER_CODE = createField(DSL.name("LETTER_CODE"), SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER_RATING.USER_ID</code>.
     */
    public final TableField<JTDrNewsletterRatingRecord, String> USER_ID = createField(DSL.name("USER_ID"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER_RATING.RATING_CNT</code>.
     */
    public final TableField<JTDrNewsletterRatingRecord, Double> RATING_CNT = createField(DSL.name("RATING_CNT"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>dmc_report.T_DR_NEWSLETTER_RATING.REG_DATE</code>.
     */
    public final TableField<JTDrNewsletterRatingRecord, LocalDateTime> REG_DATE = createField(DSL.name("REG_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    private JTDrNewsletterRating(Name alias, Table<JTDrNewsletterRatingRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrNewsletterRating(Name alias, Table<JTDrNewsletterRatingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_NEWSLETTER_RATING</code> table
     * reference
     */
    public JTDrNewsletterRating(String alias) {
        this(DSL.name(alias), T_DR_NEWSLETTER_RATING);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_NEWSLETTER_RATING</code> table
     * reference
     */
    public JTDrNewsletterRating(Name alias) {
        this(alias, T_DR_NEWSLETTER_RATING);
    }

    /**
     * Create a <code>dmc_report.T_DR_NEWSLETTER_RATING</code> table reference
     */
    public JTDrNewsletterRating() {
        this(DSL.name("T_DR_NEWSLETTER_RATING"), null);
    }

    public <O extends Record> JTDrNewsletterRating(Table<O> child, ForeignKey<O, JTDrNewsletterRatingRecord> key) {
        super(child, key, T_DR_NEWSLETTER_RATING);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public Identity<JTDrNewsletterRatingRecord, Integer> getIdentity() {
        return (Identity<JTDrNewsletterRatingRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrNewsletterRatingRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_NEWSLETTER_RATING_PRIMARY;
    }

    @Override
    public JTDrNewsletterRating as(String alias) {
        return new JTDrNewsletterRating(DSL.name(alias), this);
    }

    @Override
    public JTDrNewsletterRating as(Name alias) {
        return new JTDrNewsletterRating(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrNewsletterRating rename(String name) {
        return new JTDrNewsletterRating(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrNewsletterRating rename(Name name) {
        return new JTDrNewsletterRating(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Double, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
