/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import jooq.jooq_dsl.Indexes;
import jooq.jooq_dsl.JDmcReport;
import jooq.jooq_dsl.Keys;
import jooq.jooq_dsl.tables.records.JTDrProductDcRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JTDrProductDc extends TableImpl<JTDrProductDcRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dmc_report.T_DR_PRODUCT_DC</code>
     */
    public static final JTDrProductDc T_DR_PRODUCT_DC = new JTDrProductDc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JTDrProductDcRecord> getRecordType() {
        return JTDrProductDcRecord.class;
    }

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.IDX</code>.
     */
    public final TableField<JTDrProductDcRecord, Integer> IDX = createField(DSL.name("IDX"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.P_CODE</code>.
     */
    public final TableField<JTDrProductDcRecord, String> P_CODE = createField(DSL.name("P_CODE"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.DC_CODE</code>. 할인코드
     */
    public final TableField<JTDrProductDcRecord, String> DC_CODE = createField(DSL.name("DC_CODE"), SQLDataType.VARCHAR(20), this, "할인코드");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.DISCOUNT</code>. 할인율
     */
    public final TableField<JTDrProductDcRecord, Integer> DISCOUNT = createField(DSL.name("DISCOUNT"), SQLDataType.INTEGER, this, "할인율");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.DC_PRICE</code>. 할인금액

     */
    public final TableField<JTDrProductDcRecord, Integer> DC_PRICE = createField(DSL.name("DC_PRICE"), SQLDataType.INTEGER, this, "할인금액\n");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.DC_RESULT_PRICE</code>.
     * 할인적용금액
     */
    public final TableField<JTDrProductDcRecord, Integer> DC_RESULT_PRICE = createField(DSL.name("DC_RESULT_PRICE"), SQLDataType.INTEGER, this, "할인적용금액");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.START_DATE</code>.
     */
    public final TableField<JTDrProductDcRecord, LocalDateTime> START_DATE = createField(DSL.name("START_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.END_DATE</code>.
     */
    public final TableField<JTDrProductDcRecord, LocalDateTime> END_DATE = createField(DSL.name("END_DATE"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.COMPLETE_YN</code>. 만료처리
     */
    public final TableField<JTDrProductDcRecord, String> COMPLETE_YN = createField(DSL.name("COMPLETE_YN"), SQLDataType.CHAR(1).defaultValue(DSL.inline("N", SQLDataType.CHAR)), this, "만료처리");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.MAX_DISCOUNT</code>.
     */
    public final TableField<JTDrProductDcRecord, Integer> MAX_DISCOUNT = createField(DSL.name("MAX_DISCOUNT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.MIN_DISCOUNT</code>.
     */
    public final TableField<JTDrProductDcRecord, Integer> MIN_DISCOUNT = createField(DSL.name("MIN_DISCOUNT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.MAX_DC_PRICE</code>.
     */
    public final TableField<JTDrProductDcRecord, Integer> MAX_DC_PRICE = createField(DSL.name("MAX_DC_PRICE"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.MIN_DC_PRICE</code>.
     */
    public final TableField<JTDrProductDcRecord, Integer> MIN_DC_PRICE = createField(DSL.name("MIN_DC_PRICE"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.REGIST_ID</code>. 등록자
     */
    public final TableField<JTDrProductDcRecord, String> REGIST_ID = createField(DSL.name("REGIST_ID"), SQLDataType.VARCHAR(45), this, "등록자");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.REGIST_DATE</code>. 등록일
     */
    public final TableField<JTDrProductDcRecord, LocalDateTime> REGIST_DATE = createField(DSL.name("REGIST_DATE"), SQLDataType.LOCALDATETIME(0), this, "등록일");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.UPDATE_ID</code>. 수정자
     */
    public final TableField<JTDrProductDcRecord, String> UPDATE_ID = createField(DSL.name("UPDATE_ID"), SQLDataType.VARCHAR(45), this, "수정자");

    /**
     * The column <code>dmc_report.T_DR_PRODUCT_DC.UPDATE_DATE</code>. 수정일
     */
    public final TableField<JTDrProductDcRecord, LocalDateTime> UPDATE_DATE = createField(DSL.name("UPDATE_DATE"), SQLDataType.LOCALDATETIME(0), this, "수정일");

    private JTDrProductDc(Name alias, Table<JTDrProductDcRecord> aliased) {
        this(alias, aliased, null);
    }

    private JTDrProductDc(Name alias, Table<JTDrProductDcRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_PRODUCT_DC</code> table reference
     */
    public JTDrProductDc(String alias) {
        this(DSL.name(alias), T_DR_PRODUCT_DC);
    }

    /**
     * Create an aliased <code>dmc_report.T_DR_PRODUCT_DC</code> table reference
     */
    public JTDrProductDc(Name alias) {
        this(alias, T_DR_PRODUCT_DC);
    }

    /**
     * Create a <code>dmc_report.T_DR_PRODUCT_DC</code> table reference
     */
    public JTDrProductDc() {
        this(DSL.name("T_DR_PRODUCT_DC"), null);
    }

    public <O extends Record> JTDrProductDc(Table<O> child, ForeignKey<O, JTDrProductDcRecord> key) {
        super(child, key, T_DR_PRODUCT_DC);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JDmcReport.DMC_REPORT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.T_DR_PRODUCT_DC_P_CODE);
    }

    @Override
    public Identity<JTDrProductDcRecord, Integer> getIdentity() {
        return (Identity<JTDrProductDcRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<JTDrProductDcRecord> getPrimaryKey() {
        return Keys.KEY_T_DR_PRODUCT_DC_PRIMARY;
    }

    @Override
    public JTDrProductDc as(String alias) {
        return new JTDrProductDc(DSL.name(alias), this);
    }

    @Override
    public JTDrProductDc as(Name alias) {
        return new JTDrProductDc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrProductDc rename(String name) {
        return new JTDrProductDc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JTDrProductDc rename(Name name) {
        return new JTDrProductDc(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, String, Integer, Integer, Integer, LocalDateTime, LocalDateTime, String, Integer, Integer, Integer, Integer, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
