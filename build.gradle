plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'nu.studer.jooq' version '6.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

apply from: 'jooq.gradle'

ext {
	jooqVersion = '3.15.5'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* 기본 */
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	/* jpa 관련*/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'javax.persistence:javax.persistence-api:2.2'

	/* jooq 관련 */
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.modelmapper.extensions:modelmapper-jooq:2.3.9'
	implementation "org.jooq:jooq-meta:${jooqVersion}"
	implementation "org.jooq:jooq-codegen:${jooqVersion}"
	jooqGenerator project(':generator')

	/* Elasticsearch */
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	/* 유틸 */
	implementation 'com.github.chhsiao90:modelmapper-module-java8-datatypes:1.2.1'
	implementation 'com.github.chhsiao90:modelmapper-module-jsr310:1.2.1'
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.pdfbox:pdfbox:2.0.23'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'jakarta.json:jakarta.json-api:2.1.0'

	/* DB */
	runtimeOnly 'mysql:mysql-connector-java:8.0.27'
	runtimeOnly 'com.h2database:h2'

	/* lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/* TEST */
	//testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.testcontainers:junit-jupiter:1.16.3")
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

}

tasks {

	test {
		useJUnitPlatform()
	}

	compileJava {
		dependsOn(generateTestDBJooq)
	}

	generateTestDBJooq {
		dependsOn(processResources, processTestResources)
	}
}

sourceSets {
	main {
		java {
			srcDirs = ["src/main/java", "src/generated"]
		}
	}
}
